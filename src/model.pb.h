// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#ifndef PROTOBUF_model_2eproto__INCLUDED
#define PROTOBUF_model_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace KFM {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_model_2eproto();
void protobuf_AssignDesc_model_2eproto();
void protobuf_ShutdownFile_model_2eproto();

class Mat;
class ModelParameters;

enum ModelParameters_OUTPUT {
  ModelParameters_OUTPUT_SIGMOID = 0,
  ModelParameters_OUTPUT_LINER = 1
};
bool ModelParameters_OUTPUT_IsValid(int value);
const ModelParameters_OUTPUT ModelParameters_OUTPUT_OUTPUT_MIN = ModelParameters_OUTPUT_SIGMOID;
const ModelParameters_OUTPUT ModelParameters_OUTPUT_OUTPUT_MAX = ModelParameters_OUTPUT_LINER;
const int ModelParameters_OUTPUT_OUTPUT_ARRAYSIZE = ModelParameters_OUTPUT_OUTPUT_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModelParameters_OUTPUT_descriptor();
inline const ::std::string& ModelParameters_OUTPUT_Name(ModelParameters_OUTPUT value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModelParameters_OUTPUT_descriptor(), value);
}
inline bool ModelParameters_OUTPUT_Parse(
    const ::std::string& name, ModelParameters_OUTPUT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModelParameters_OUTPUT>(
    ModelParameters_OUTPUT_descriptor(), name, value);
}
// ===================================================================

class Mat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFM.Mat) */ {
 public:
  Mat();
  virtual ~Mat();

  Mat(const Mat& from);

  inline Mat& operator=(const Mat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mat& default_instance();

  void Swap(Mat* other);

  // implements Message ----------------------------------------------

  inline Mat* New() const { return New(NULL); }

  Mat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mat& from);
  void MergeFrom(const Mat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Mat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 rows = 1;
  bool has_rows() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  ::google::protobuf::uint64 rows() const;
  void set_rows(::google::protobuf::uint64 value);

  // required uint64 cols = 2;
  bool has_cols() const;
  void clear_cols();
  static const int kColsFieldNumber = 2;
  ::google::protobuf::uint64 cols() const;
  void set_cols(::google::protobuf::uint64 value);

  // repeated double data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:KFM.Mat)
 private:
  inline void set_has_rows();
  inline void clear_has_rows();
  inline void set_has_cols();
  inline void clear_has_cols();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 rows_;
  ::google::protobuf::uint64 cols_;
  ::google::protobuf::RepeatedField< double > data_;
  friend void  protobuf_AddDesc_model_2eproto();
  friend void protobuf_AssignDesc_model_2eproto();
  friend void protobuf_ShutdownFile_model_2eproto();

  void InitAsDefaultInstance();
  static Mat* default_instance_;
};
// -------------------------------------------------------------------

class ModelParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFM.ModelParameters) */ {
 public:
  ModelParameters();
  virtual ~ModelParameters();

  ModelParameters(const ModelParameters& from);

  inline ModelParameters& operator=(const ModelParameters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelParameters& default_instance();

  void Swap(ModelParameters* other);

  // implements Message ----------------------------------------------

  inline ModelParameters* New() const { return New(NULL); }

  ModelParameters* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelParameters& from);
  void MergeFrom(const ModelParameters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ModelParameters_OUTPUT OUTPUT;
  static const OUTPUT SIGMOID =
    ModelParameters_OUTPUT_SIGMOID;
  static const OUTPUT LINER =
    ModelParameters_OUTPUT_LINER;
  static inline bool OUTPUT_IsValid(int value) {
    return ModelParameters_OUTPUT_IsValid(value);
  }
  static const OUTPUT OUTPUT_MIN =
    ModelParameters_OUTPUT_OUTPUT_MIN;
  static const OUTPUT OUTPUT_MAX =
    ModelParameters_OUTPUT_OUTPUT_MAX;
  static const int OUTPUT_ARRAYSIZE =
    ModelParameters_OUTPUT_OUTPUT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OUTPUT_descriptor() {
    return ModelParameters_OUTPUT_descriptor();
  }
  static inline const ::std::string& OUTPUT_Name(OUTPUT value) {
    return ModelParameters_OUTPUT_Name(value);
  }
  static inline bool OUTPUT_Parse(const ::std::string& name,
      OUTPUT* value) {
    return ModelParameters_OUTPUT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .KFM.Mat w = 1;
  bool has_w() const;
  void clear_w();
  static const int kWFieldNumber = 1;
  const ::KFM::Mat& w() const;
  ::KFM::Mat* mutable_w();
  ::KFM::Mat* release_w();
  void set_allocated_w(::KFM::Mat* w);

  // required .KFM.Mat v = 2;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 2;
  const ::KFM::Mat& v() const;
  ::KFM::Mat* mutable_v();
  ::KFM::Mat* release_v();
  void set_allocated_v(::KFM::Mat* v);

  // required double b = 3;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 3;
  double b() const;
  void set_b(double value);

  // required .KFM.ModelParameters.OUTPUT output = 4;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 4;
  ::KFM::ModelParameters_OUTPUT output() const;
  void set_output(::KFM::ModelParameters_OUTPUT value);

  // @@protoc_insertion_point(class_scope:KFM.ModelParameters)
 private:
  inline void set_has_w();
  inline void clear_has_w();
  inline void set_has_v();
  inline void clear_has_v();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_output();
  inline void clear_has_output();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::KFM::Mat* w_;
  ::KFM::Mat* v_;
  double b_;
  int output_;
  friend void  protobuf_AddDesc_model_2eproto();
  friend void protobuf_AssignDesc_model_2eproto();
  friend void protobuf_ShutdownFile_model_2eproto();

  void InitAsDefaultInstance();
  static ModelParameters* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Mat

// required uint64 rows = 1;
inline bool Mat::has_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mat::set_has_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mat::clear_has_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mat::clear_rows() {
  rows_ = GOOGLE_ULONGLONG(0);
  clear_has_rows();
}
inline ::google::protobuf::uint64 Mat::rows() const {
  // @@protoc_insertion_point(field_get:KFM.Mat.rows)
  return rows_;
}
inline void Mat::set_rows(::google::protobuf::uint64 value) {
  set_has_rows();
  rows_ = value;
  // @@protoc_insertion_point(field_set:KFM.Mat.rows)
}

// required uint64 cols = 2;
inline bool Mat::has_cols() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mat::set_has_cols() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mat::clear_has_cols() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mat::clear_cols() {
  cols_ = GOOGLE_ULONGLONG(0);
  clear_has_cols();
}
inline ::google::protobuf::uint64 Mat::cols() const {
  // @@protoc_insertion_point(field_get:KFM.Mat.cols)
  return cols_;
}
inline void Mat::set_cols(::google::protobuf::uint64 value) {
  set_has_cols();
  cols_ = value;
  // @@protoc_insertion_point(field_set:KFM.Mat.cols)
}

// repeated double data = 3;
inline int Mat::data_size() const {
  return data_.size();
}
inline void Mat::clear_data() {
  data_.Clear();
}
inline double Mat::data(int index) const {
  // @@protoc_insertion_point(field_get:KFM.Mat.data)
  return data_.Get(index);
}
inline void Mat::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFM.Mat.data)
}
inline void Mat::add_data(double value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:KFM.Mat.data)
}
inline const ::google::protobuf::RepeatedField< double >&
Mat::data() const {
  // @@protoc_insertion_point(field_list:KFM.Mat.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
Mat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:KFM.Mat.data)
  return &data_;
}

// -------------------------------------------------------------------

// ModelParameters

// required .KFM.Mat w = 1;
inline bool ModelParameters::has_w() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModelParameters::set_has_w() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModelParameters::clear_has_w() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModelParameters::clear_w() {
  if (w_ != NULL) w_->::KFM::Mat::Clear();
  clear_has_w();
}
inline const ::KFM::Mat& ModelParameters::w() const {
  // @@protoc_insertion_point(field_get:KFM.ModelParameters.w)
  return w_ != NULL ? *w_ : *default_instance_->w_;
}
inline ::KFM::Mat* ModelParameters::mutable_w() {
  set_has_w();
  if (w_ == NULL) {
    w_ = new ::KFM::Mat;
  }
  // @@protoc_insertion_point(field_mutable:KFM.ModelParameters.w)
  return w_;
}
inline ::KFM::Mat* ModelParameters::release_w() {
  // @@protoc_insertion_point(field_release:KFM.ModelParameters.w)
  clear_has_w();
  ::KFM::Mat* temp = w_;
  w_ = NULL;
  return temp;
}
inline void ModelParameters::set_allocated_w(::KFM::Mat* w) {
  delete w_;
  w_ = w;
  if (w) {
    set_has_w();
  } else {
    clear_has_w();
  }
  // @@protoc_insertion_point(field_set_allocated:KFM.ModelParameters.w)
}

// required .KFM.Mat v = 2;
inline bool ModelParameters::has_v() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModelParameters::set_has_v() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModelParameters::clear_has_v() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModelParameters::clear_v() {
  if (v_ != NULL) v_->::KFM::Mat::Clear();
  clear_has_v();
}
inline const ::KFM::Mat& ModelParameters::v() const {
  // @@protoc_insertion_point(field_get:KFM.ModelParameters.v)
  return v_ != NULL ? *v_ : *default_instance_->v_;
}
inline ::KFM::Mat* ModelParameters::mutable_v() {
  set_has_v();
  if (v_ == NULL) {
    v_ = new ::KFM::Mat;
  }
  // @@protoc_insertion_point(field_mutable:KFM.ModelParameters.v)
  return v_;
}
inline ::KFM::Mat* ModelParameters::release_v() {
  // @@protoc_insertion_point(field_release:KFM.ModelParameters.v)
  clear_has_v();
  ::KFM::Mat* temp = v_;
  v_ = NULL;
  return temp;
}
inline void ModelParameters::set_allocated_v(::KFM::Mat* v) {
  delete v_;
  v_ = v;
  if (v) {
    set_has_v();
  } else {
    clear_has_v();
  }
  // @@protoc_insertion_point(field_set_allocated:KFM.ModelParameters.v)
}

// required double b = 3;
inline bool ModelParameters::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModelParameters::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModelParameters::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModelParameters::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline double ModelParameters::b() const {
  // @@protoc_insertion_point(field_get:KFM.ModelParameters.b)
  return b_;
}
inline void ModelParameters::set_b(double value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:KFM.ModelParameters.b)
}

// required .KFM.ModelParameters.OUTPUT output = 4;
inline bool ModelParameters::has_output() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModelParameters::set_has_output() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModelParameters::clear_has_output() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModelParameters::clear_output() {
  output_ = 0;
  clear_has_output();
}
inline ::KFM::ModelParameters_OUTPUT ModelParameters::output() const {
  // @@protoc_insertion_point(field_get:KFM.ModelParameters.output)
  return static_cast< ::KFM::ModelParameters_OUTPUT >(output_);
}
inline void ModelParameters::set_output(::KFM::ModelParameters_OUTPUT value) {
  assert(::KFM::ModelParameters_OUTPUT_IsValid(value));
  set_has_output();
  output_ = value;
  // @@protoc_insertion_point(field_set:KFM.ModelParameters.output)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFM

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFM::ModelParameters_OUTPUT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFM::ModelParameters_OUTPUT>() {
  return ::KFM::ModelParameters_OUTPUT_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_2eproto__INCLUDED
